name: Test C++

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  test_cpp:
    name: build (${{ matrix.os }}, C++)
    
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - os: ubuntu-latest
            VCPKG_DEFAULT_TRIPLET: x64-linux
          - os: windows-latest
            VCPKG_DEFAULT_TRIPLET: x64-windows
          - os: macOS-latest
            VCPKG_DEFAULT_TRIPLET: x64-osx

    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.VCPKG_DEFAULT_TRIPLET }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Create Build Environment
      run: |
        cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: |
        export VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT
        ${VCPKG_ROOT}/vcpkg install benchmark catch2 eigen3
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_PYTHON_MODULE=OFF

    - name: Build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      if: ${{ !startsWith(runner.os, 'Windows') }}
      working-directory: ${{runner.workspace}}/build
      run: ./tests

    - name: Test
      if: startsWith(runner.os, 'Windows')
      working-directory: ${{runner.workspace}}/build
      run: ${{runner.workspace}}\build\Release\tests.exe
      shell: cmd
